import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

public class Indexer {
	
	public static ArrayList<String> degrees;
	public static ArrayList<String> stopwords;
	
	public Indexer() 
	{
		getStopWords("stopwords.txt", stopwords);
	}
	
	public void getStopWords(String filename, ArrayList<String>stopWordsList)
	 {
		 try {
		      File myObj = new File(filename);
		      Scanner myReader = new Scanner(myObj);
		      while (myReader.hasNextLine()) {
		        String data = myReader.nextLine();
		        stopWordsList.add(data);
		        
		      }
		      myReader.close();
		    } catch (FileNotFoundException e) {
		      System.out.println("An error occurred.");
		      e.printStackTrace();
		    }
	 }	


	 private static class Index extends Thread{
		 Integer threadId;
		 Integer key; //for synchronization purpose
		 public Index(int id, int k)
		 {
			 this.threadId = id;
			 this.key = k;
		 }
		 
		 public void run()
		 {
			String link = null;
			while(true)
			{
				synchronized(this.key) {
					try 
					{
						
						link=IndexerDbConnection.getUnIndexedUrl();	
					} 
					catch (SQLException e) 
					{
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					if (link == null)
					{
						break;
					}
					else 
					{
						try {
							IndexerDbConnection.BeginIndexing(link.toString());
						} catch (SQLException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
			}
			Document document = null;
			try {
				document = Jsoup.connect(link).timeout(0).get();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			if(document != null)
			{
				
				ArrayList<String> stemmedWords = new ArrayList<String>();
				Elements htmlDoc = document.select("h1, h2, h3, h4, h5, h6, p, title, i, b");
				IndexerDbConnection.getWordDegrees(degrees);
				for(int i = 0 ;i<degrees.size();i++)
				{
					parseText(htmlDoc, degrees.get(i),stemmedWords,stopwords);
				}
				
			}
		 
		 }
		 }
			
			 
			 static boolean isNumber(String s)
		    {
		        for (int i = 0; i < s.length(); i++)
		            if (Character.isDigit(s.charAt(i)) == false)
		                return false;
		 
		        return true;
		    }
			 
			public static void parseText(Elements textDoc, String degree, ArrayList<String> stemmedWords,ArrayList<String> stopwords )
			 {
				 Elements selectedWords = textDoc.select(degree); //We select from the document the text based on whether the degree passed is h1, h2, h3, ..
				 String extractedText =  selectedWords.text();
				 String[] splittedText = null;
				 if(extractedText.length() != 0)
				 {
					 splittedText = extractedText.split("[^a-zA-Z0-9']");
				 }
				
				 if(splittedText.length != 0)
				 {
					 ArrayList<String> stemming = new ArrayList<String>();
					 Stemmer s = new Stemmer();
					 for (int i=0 ;i<splittedText.length;i++)
					 {
						 splittedText[i] = splittedText[i].toLowerCase();
						 if(!stopwords.contains(splittedText[i]))
						 {
							 if(isNumber(splittedText[i]) && splittedText[i].length() == 4)
							 {
								 stemmedWords.add(splittedText[i]);
								 continue;
							 }
							 if(!splittedText[i].isBlank() && !splittedText[i].isEmpty() && !isNumber(splittedText[i]))
							 {
								 System.out.println(splittedText[i]);
								 String stem = s.StemWord(splittedText[i]);
								 if(!stemmedWords.contains(stem)) 
								 { 
									 stemmedWords.add(stem); 
								 }
							 }
						 }
					 }
					 
				 }	 
			 }
}
	 public static void main(String args[]) throws Exception {
			/*
			 * Indexer i = new Indexer(); ArrayList<String> stopwords = new
			 * ArrayList<String>(); i.getStopWords("stopwords.txt", stopwords); Document doc
			 * = Jsoup.connect(
			 * "https://code.visualstudio.com/docs/languages/java#:~:text=Once%20you've%20installed%20the,%22Java%3A%20Getting%20Started%22."
			 * ).timeout(0).get(); Elements words =
			 * doc.select("h1, h2, h3, h4, h5, h6,p,title,i,b"); ArrayList<String>
			 * stemmedWords = new ArrayList<String>(); i.parseText(words, "p", stemmedWords,
			 * stopwords); System.out.println(stemmedWords); return;
			 */
		}
}
