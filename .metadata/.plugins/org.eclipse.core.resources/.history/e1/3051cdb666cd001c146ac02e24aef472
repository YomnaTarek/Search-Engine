import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

public class Indexer {

	public Indexer() 
	{
		
	}
	
	 private static class Index extends Thread{
		 int threadId;
		 int key; //for synchronization purpose
		 public Index(int id, int k)
		 {
			 this.threadId = id;
			 this.key = k;
		 }
		 
		 public void run()
		 {
			 
		 }
		////
	 }
	 
	 public void getStopWords(String filename, ArrayList<String>stopWordsList)
	 {
		 try {
		      File myObj = new File(filename);
		      Scanner myReader = new Scanner(myObj);
		      while (myReader.hasNextLine()) {
		        String data = myReader.nextLine();
		        stopWordsList.add(data);
		        
		      }
		      myReader.close();
		    } catch (FileNotFoundException e) {
		      System.out.println("An error occurred.");
		      e.printStackTrace();
		    }
	 }
	 
	 static boolean isNumber(String s)
	    {
	        for (int i = 0; i < s.length(); i++)
	            if (Character.isDigit(s.charAt(i)) == false)
	                return false;
	 
	        return true;
	    }
	 
	 public void parseText(Elements textDoc, String degree, ArrayList<String> stemmedWords,ArrayList<String> stopwords )
	 {
		 Elements selectedWords = textDoc.select(degree); //We select from the document the text based on whether the degree passed is h1, h2, h3, ..
		 String extractedText =  selectedWords.text();
		 String[] splittedText = null;
		 if(extractedText.length() != 0)
		 {
			 splittedText = extractedText.split("[^a-zA-Z0-9'-]");
		 }
		
		 if(splittedText.length != 0)
		 {
			 ArrayList<String> stemming = new ArrayList<String>();
			 Stemmer s = new Stemmer();
			 for (int i=0 ;i<splittedText.length;i++)
			 {
				 splittedText[i] = splittedText[i].toLowerCase();
				 if(!stopwords.contains(splittedText[i]))
				 {
					 if(isNumber(splittedText[i]) && splittedText[i].length() == 4)
					 {
						 stemmedWords.add(splittedText[i]);
						 continue;
					 }
					 if(!splittedText[i].isBlank() && !splittedText[i].isEmpty() && !isNumber(splittedText[i]))
					 {
						 System.out.println(splittedText[i]);
						 String stem = s.StemWord(splittedText[i]);
						 if(!stemmedWords.contains(stem)) 
						 { 
							 stemmedWords.add(stem); 
						 }
					 }
				 }
			 }
			 
		 }	 
	 }
	 
	 public static void main(String args[]) throws Exception {
		 Indexer i = new Indexer();
		 ArrayList<String> stopwords = new ArrayList<String>();
		 i.getStopWords("stopwords.txt", stopwords);
		 System.out.println(stopwords);
		 Document doc = Jsoup.connect("https://code.visualstudio.com/docs/languages/java#:~:text=Once%20you've%20installed%20the,%22Java%3A%20Getting%20Started%22.").timeout(0).get();
		 Elements words = doc.select("h1, h2, h3, h4, h5, h6,p,title,i,b");
		 ArrayList<String> stemmedWords = new ArrayList<String>();
		 i.parseText(words, "p", stemmedWords, stopwords);
			return;
		}
}
